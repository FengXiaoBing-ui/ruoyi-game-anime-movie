<template>
	<view class="content">
		<view :style="'margin-top:'+tabHeight+'px;width:'+width+'px;height:230px'">
			<web-view ref="webview" :style="'width:'+width+'px;height:230px'" @onPostMessage="handleMessage" :src="nowUrl"></web-view>
		</view>
		<view class="video-tab" style="padding: 0 10px;">
			<view class="tabList"><text style="color: #ef9dbe;">简介</text></view>
			<view class="tabList"><text style="color: #ef9dbe;">评论123</text></view>
		</view>
		<swiper :style="'height:'+winHiehgt+'px'">
			<swiper-item :style="'height:'+winHiehgt+'px'">
				<view class="swiper-item">
					<text class="title">{{ info.title }}</text>
					<view class="info">{{ info.animeYear }} / {{ info.animeCategory }} / {{ info.animeType }}</view>
					<view style="display: flex;flex-direction: row;justify-content: space-between;margin-top: 10px;">
						<text style="width: 270px;" class="text-cut">{{ info.animeDesc }}</text>
						<view @click="viewDetail">查看详情</view>
					</view>
					<view
						style="display: flex;flex-direction: row; justify-content: space-between;align-items: center;margin-top: 20px;">
						<view>选集</view>
						<view @click="viewPages" style="display: flex;flex-direction: row;">{{ info.updateState }}
							<up-icon name="arrow-right"></up-icon>
						</view>
					</view>
					<scroll-view style="margin-top: 10px;height: 100px;flex-direction: row;width: 350px;"
						:scroll="false" :scroll-x="true" :show-scrollbar="false" :scroll-left="xNum">
						<view class="eplsode" style="flex-direction: column;">
							<view style="display: flex;flex-direction: row;flex-wrap: nowrap;">
								<view :id="'episodeIndex'+index" v-for="(tab,index) in info.animeVideo" :key="tab"
									@tap="episode(index)">
									<text :class="{'list':true,'active-list':episodeIndex==index}">{{index+1}}</text>
								</view>
							</view>
						</view>
					</scroll-view>
				</view>
			</swiper-item>
			<swiper-item :style="'height:'+winHiehgt+'px'">
				<view class="swiper-item">
					<view class="comment-list">
						<view class="list" style="display: flex;flex-direction: row;">
							<view style="width: 50px;">
								<up-avatar text="xxx"></up-avatar>
							</view>
							<view style="width: 300px;">
								<view>
									<view class="nickname">nickname</view>
									<view class="date">7月17日</view>
								</view>
								<view class="content">
									xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
								</view>
								<view class="operationList">
									<up-icon size="20" name="thumb-up" label="99"></up-icon>
									<up-icon size="20" name="thumb-down" label="11">></up-icon>
									<up-icon size="20" name="chat"></up-icon>
								</view>
								<view class="reply">
									<view class="reply-box">
										<text style="color: #39b2ea;">xxx：</text>
										<text>132132132</text>
									</view>
									<view style="color: #39b2ea;margin-top: 10px;">共4条回复</view>
								</view>
							</view>
						</view>
					</view>
					<up-empty mode="message" icon="http://cdn.uviewui.com/uview/empty/message.png">
					</up-empty>
				</view>
			</swiper-item>
		</swiper>

		<up-popup :show="show" @close="close" @open="open">
			<view class="mask" :style="'height:'+winHiehgt+'px;width:'+width+'px'">
				<view v-if="showDetails">
					<view>简介：</view>
					<view>{{ info.animeDesc }}</view>
				</view>
				<view class="eplsode" v-if="showPage">
					<view style="margin: 5px 0;">剧集</view>
					<scroll-view style="flex-direction: column;" :scroll-top="yNum"
						:style="'height:'+(winHiehgt-30)+'px;width:'+width+'px'" :scroll="false" :scroll-y="true"
						:show-scrollbar="false">
						<view style="display: flex;flex-direction: row;flex-wrap: wrap;">
							<view :id="'episodeI'+index" v-for="(tab,index) in info.animeVideo" :key="tab"
								@tap="episode(index)">
								<text :class="{'list':true,'active-list':episodeIndex==index}">{{index+1}}</text>
							</view>
						</view>
					</scroll-view>
				</view>
			</view>
		</up-popup>
	</view>
</template>

<script>
	import req from "../../api/request.js";
	import http from "../../api/api.js";
	export default {
		data() {
			return {
				info: {},
				nowUrl: "",
				show: false,
				showDetails: false,
				showPage: false,
				type: "",
				episodeIndex: 0,
				tabHeight: 0,
				winHiehgt: 0,
				videoPlay: null,
				width: 0,
				height: 0,
				xNum: 0,
				yNum: 0,
				isFull: false,
				isControls: true,
				index: 0,
				start_time: 0,
				end_time: 0,
				isPlay:false
			}
		},
		async onLoad(option) {
			this.type = option.type
			this.episodeIndex = option.index
			await this.getMoveListDeatils(option.id)
			this.clickItem("#episodeIndex" + option.index, 0)
			uni.getSystemInfo({
				success: (res) => {
					this.tabHeight = res.statusBarHeight
					this.winHiehgt = res.safeArea.height - 350
					console.log(res)
					this.width = res.screenWidth
					this.height = res.screenHeight
				}
			})
		},
		methods: {
			handleMessage(e){
				if(e.detail.data[0].isFull){
					plus.screen.lockOrientation('landscape');
				}else{
					plus.screen.lockOrientation('portrait-primary');
				}
			},
			async getVideoUrl(episode) {
				this.nowUrl = ""
				const res = await http.getVideoUrl({
					url: this.info.animeVideo[episode]
				})
				this.nowUrl = res.msg
			},
			async getMoveListDeatils(id) {
				let res = ""
				if (this.type == "国产动漫") {
					res = await http.getChAnimeListDeatils(id)
				} else if (this.type == "日本动漫") {
					res = await http.getMoveListDeatils(id)
				} else if (this.type == "动漫电影") {
					res = await http.getAnimeMoiveListDeatils(id)
				}
				this.info = res.data
				this.info.animeVideo = res.data.animeVideo.split(";")
				this.info.animeVideo.length = this.info.animeVideo.length - 1
				// 20240806/3313_e0eeeb4e/2000k/hls/mixed.m3u8
				this.nowUrl = `http://192.168.3.83:5500/index.html?id=${id}&type=mp4&url=${this.info.animeVideo[this.episodeIndex]}`
				console.log(this.nowUrl);
			},
			viewPages() {
				this.open()
				this.showPage = true
				this.clickItem("#episodeI" + this.episodeIndex, 1)
			},
			viewDetail() {
				this.open()
				this.showDetails = true
			},
			handleError(e) {
				console.log(e);
			},
			episode(index) {
				req.cancelHttp()
				uni.redirectTo({
					url: `/pages/amineDetails/amineDetails?index=${index}&id=${this.info.id}&type=${this.type}`
				})
			},
			close() {
				this.show = false
				this.showDetails = false
				this.showPage = false
			},
			open() {
				this.show = true
			},
			clickItem(dom, state) {
				const query = uni.createSelectorQuery().in(this);
				setTimeout(() => {
					query.select(dom).boundingClientRect((data) => {
						if (!state) this.xNum = data.left - 20
						if (state) this.yNum = data.top - 830
					}).exec();
				}, 100)
			}
		}
	}
</script>

<style scoped>
	.tabList {
		height: 30px;
		text-align: center;
		line-height: 60px;
		margin: 5px 15px 0 15px;
	}

	.doubleSpeed {
		position: relative;
		left: 620px;
		width: 80px;
		height: 300px;
		background-color: rgba(0, 0, 0, 0);
		z-index: 999999999;
	}

	.comment-list {
		display: flex;
		flex-direction: column;
		width: 350px;
		margin-top: 10px;


	}

	.nickname {}

	.date {}

	.content {
		word-wrap: break-word;
		/* 在单词内部断行 */
		white-space: normal;
		/* 允许自动换行 */
	}

	.operationList {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		width: 260px;
		margin-top: 10px;
	}

	.reply {
		border-radius: 8px;
		padding: 10px;
		background: #e6e6e6;
		margin-top: 20px;
	}




	.mask {
		background-color: white;
		padding: 10px;
		box-sizing: border-box;
	}

	.play-list {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;


	}

	.eplsode .list {
		display: inline-block;
		min-width: 50px;
		width: 50px;
		height: 50px;
		margin: 10px 11px;
		background: #bababa;
		color: white;
		text-align: center;
		line-height: 50px;
	}

	.eplsode .active-list {
		display: inline-block;
		background: #efc5cf !important;
		color: #ee405a !important;
		border: 1rpx solid red;
	}

	.text-cut {
		verflow: hidden;
		word-break: break-all;
		/* break-all(允许在单词内换行 */
		text-overflow: ellipsis;
		/* 超出部分省略号 */
		-webkit-box-orient: vertical;
		/* 设置或检索伸缩盒对象的子元素的排列方式 */
		-webkit-line-clamp: 1;
		/* 显示的行数 */
		lines: 1;
		/* NVUE下要用这个，让文字超出固定行数隐藏变省略号 */
		color: #9a9a99;
	}

	.video-box {
		position: relative;
		height: 230px;
	}

	.video-tab {
		display: flex;
		flex-direction: row;
		align-items: center;
	}



	.swiper-item {
		padding: 5px 20px;


	}

	.title {
		font-size: 20px;
		font-weight: 550;
	}

	.info {
		color: #6d6d6d;
		margin-top: 10px;
	}
</style>